// ==========================================================================
// Base – Mixins
// ==========================================================================
// Breakpoint sizes [断点
// Example usage @include breakpoint(x) { ... }; - where x is the device
@mixin breakpoint($bp) {
  @if $bp==xl {
    @media only screen and (min-width: $breakpoint-xl) {
      @content;
    }
  } @else if $bp==l {
    @media only screen and (min-width: $breakpoint-l) {
      @content;
    }
  } @else if $bp==m {
    @media only screen and (min-width: $breakpoint-m) {
      @content;
    }
  }
}

// Font sizes (primary sizing in `rem` units with a fallback of `px`)
// Example usage @include font-size(18);
@mixin font-size($size) {
  $remValue: $size / 16;
  $pxValue: ($size);
  font-size: $pxValue + px;
  font-size: $remValue + rem;
}

// Line height sizes (primary sizing in `rem` units with a fallback of `px`)
// Example usage @include line-height(22);
@mixin line-height($size) {
  $remValue: $size / 16;
  $pxValue: ($size);
  line-height: $pxValue + px;
  line-height: $remValue + rem;
}

// Background Color with Opacity
// Example Usage: @include bg-rgba(#111, 50%);
@mixin background-alpha($color, $alpha) {
  $opacity: $alpha / 100%;
  $rgba: rgba($color, $opacity);
  background: $color;
  background: rgba($color, $opacity);
}

// Animations
// Example Usage @mixin animate(1s);
@mixin animate($duration: 1s) {
  animation-duration: $duration;
  animation-fill-mode: both;
}

@mixin opacity($opacity) {
  opacity: $opacity;
  // IE8 filter
  $opacity-ie: ($opacity * 100);
  filter: alpha(opacity=$opacity-ie);
}


// Typography
// [converter] $parent hack




@mixin button-variant($parent, $background-color, $color, $active-background-color,$active-color) {
  .button-#{$parent} {
    background-color: $background-color;
    color: $color;
    border: solid 1px transparent;
  }
  .button-#{$parent}:hover,
  .button-#{$parent}:focus {
    background-color: lighten($background-color, 10%);
    color: $color;
  }
  .button-#{$parent}:active,
  .button-#{$parent}.active {
    background-color: $active-background-color;
    color: $active-color;
  }
  .button-#{$parent}.profile {
    background: $color-white;
    color: $background-color;
    border: solid 1px $background-color;
  }
}

@mixin badge-variant($parent, $background-color, $color) {
  .badge-#{$parent} {
    background-color: $background-color;
    color: $color;
  }
}
