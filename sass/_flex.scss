// Flex Types
$columns: 12;

.flex-column, .flex-row {
  display: flex;
}

.flex-column {
  flex-direction: column;
}

.flex-row {
  flex-direction: row;
}

.flex-wrap {
  flex-wrap: wrap;
}

.flex-strech {
  align-items: stretch;
}

.flex-between {
  justify-content: space-between;
}

.flex-around {
  justify-content: space-around;
}

.flex-baseline {
  align-items: baseline;
}

// flex的对齐方式
@mixin build-align($type) {
  @if $type == row {
    &.flex-left {
      justify-content: flex-start;
    }
    &.flex-right {
      justify-content: flex-end;
    }
    &.flex-top {
      align-items: flex-start;
    }
    &.flex-bottom {
      align-items: flex-end;
    }
    &.flex-center {
      justify-content: center;
    }
    &.flex-middle {
      align-items: center;
    }
  } @else if $type == column {
    &.flex-left {
      align-items: flex-start;
    }
    &.flex-right {
      align-items: flex-end;
    }
    &.flex-top {
      justify-content: flex-start;
    }
    &.flex-bottom {
      justify-content: flex-end;
    }
    &.flex-center {
      align-items: center;
    }
    &.flex-middle {
      justify-content: center;
    }
  }

}

.align-self-start {
  align-self: flex-start;
}

.align-self-end {
  align-self: flex-end;
}

.align-self-center {
  align-self: center;
}

.align-self-baseline {
  align-self: baseline;
}

.flex-column {
  @include build-align(column);
}

.flex-row {
  @include build-align(row);
}

.flex-col-auto, [class*=flex-col] {
  flex: 1;
}

@for $i from 1 through $columns {
  .flex-col-#{$i} {
    width: $i / $columns * 100%;
    flex: 0 0 $i / $columns * 100%;
  }
}
